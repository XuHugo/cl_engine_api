[package]
name = "types"
version = "0.2.1"
authors = [
    "Paul Hauner <paul@paulhauner.com>",
    "Age Manning <Age@AgeManning.com>",
]
edition = "2021"

[[bench]]
name = "benches"
harness = false

[dependencies]
merkle_proof = { path = "../merkle_proof" }
bls = { path = "../../crypto/bls", features = ["arbitrary"] }
compare_fields = { path = "../../common/compare_fields" }
compare_fields_derive = { path = "../../common/compare_fields_derive" }
eth2_interop_keypairs = { path = "../../common/eth2_interop_keypairs" }
ethereum-types = { versioin = "0.14", features = ["arbitrary"] }
ethereum_hashing = "1.0.0-beta.2"
hex = "0.4"
int_to_bytes = { path = "../int_to_bytes" }
log = "0.4"
rayon = "1.7"
rand = "0.8"
safe_arith = { path = "../safe_arith" }
serde = { version = "1", features = ["rc", "derive"] }
serde_derive = "1.0.116"
slog = { version = "2", features = [
    "max_level_trace",
    "release_max_level_trace",
] }
ethereum_ssz = { version = "0.5", features = ["arbitrary"] }
ethereum_ssz_derive = "0.5"
ssz_types = { version = "0.5", features = ["arbitrary"] }
swap_or_not_shuffle = { path = "../swap_or_not_shuffle", features = [
    "arbitrary",
] }
test_random_derive = { path = "../../common/test_random_derive" }
tree_hash = { version = "0.5", features = ["arbitrary"] }
tree_hash_derive = "0.5"
rand_xorshift = "0.3.0"
cached_tree_hash = { path = "../cached_tree_hash" }
serde_yaml = "0.8"
tempfile = "3"
derivative = "2"
rusqlite = { version = "0.28", features = ["bundled"] }
# The arbitrary dependency is enabled by default since Capella to avoid complexity introduced by
# `AbstractExecPayload`
arbitrary = { version = "1", features = ["derive"] }
ethereum_serde_utils = "0.5"
regex = "1"
lazy_static = "1"
parking_lot = "0.12"
itertools = "0.10"
superstruct = "0.6"
metastruct = "0.1.0"
serde_json = "1"
smallvec = "1"
serde_with = "1.13.0"
maplit = "1"
strum = { version = "0.24", features = ["derive"] }

# [dev-dependencies]
# criterion = { workspace = true }
# beacon_chain = { workspace = true }
# state_processing = { workspace = true }
# tokio = { workspace = true }
# paste = { workspace = true }

[features]
default = ["sqlite", "legacy-arith"]
# Allow saturating arithmetic on slots and epochs. Enabled by default, but deprecated.
legacy-arith = []
sqlite = []
# The `arbitrary-fuzz` feature is a no-op provided for backwards compatibility.
# For simplicity `Arbitrary` is now derived regardless of the feature's presence.
arbitrary-fuzz = []
